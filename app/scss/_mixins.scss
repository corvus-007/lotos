@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin make-limit-width($gutter: $grid-gutter-width) {
  min-width: (320px - $gutter);
  max-width: 1500px;
  margin-left: auto;
  margin-right: auto;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);

  @include media-breakpoint-up(md) {
    padding-left: ($gutter * 3);
    padding-right: ($gutter * 3);
  }
}

@mixin dotted-link($size: 2px) {
  border-bottom: $size solid transparent;
  background-origin: border-box;
  background-image: linear-gradient(to right, currentColor $size, transparent 0);
  background-position: 50% 100%;
  background-size: ($size * 2) $size;
  background-repeat: round no-repeat;
}

@mixin clear-list() {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin visuallyhidden {
  position: absolute;

  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;

  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

/// Подстраивание изображений (и не только) под заданные пропорции
@mixin fitObject($target-width: 1, $target-height: 1, $fit: cover) {
  position: relative;
  display: block;
  overflow: hidden;

  &::before {
    content: "";
    width: 100%;
    display: block;
    height: 0;
    padding-top: percentage($target-height / $target-width);
  }

  img {
    position: absolute;
    width: 100%;
    height: auto;
    transform: translateX(-50%) translateY(-50%);
    top: 50%;
    left: 50%;
  }

  @supports (object-fit: $fit) {
    img {
      object-fit: $fit;
      height: 100%;
      transform: none;
      top: 0;
      left: 0;
    }
  }
}
